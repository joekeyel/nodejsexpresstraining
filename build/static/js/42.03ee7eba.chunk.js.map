{"version":3,"sources":["views/Gant/Gant.js"],"names":["DemoApp","calendarComponentRef","React","createRef","state","calendarWeekends","calendarEvents","title","start","Date","toggleWeekends","setState","gotoPast","current","getApi","gotoDate","handleDateClick","arg","concat","date","allDay","className","onClick","this","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","ref","weekends","events","dateClick","Component"],"mappings":"kVAQqBA,G,oNAEnBC,qBAAuBC,IAAMC,Y,EAC7BC,MAAQ,CACNC,kBAAkB,EAClBC,eAAgB,CACd,CAAEC,MAAO,YAAaC,MAAO,IAAIC,Q,EA+BrCC,eAAiB,WACf,EAAKC,SAAS,CACZN,kBAAmB,EAAKD,MAAMC,oB,EAIlCO,SAAW,WACS,EAAKX,qBAAqBY,QAAQC,SACxCC,SAAS,e,EAGvBC,gBAAkB,SAACC,GAEf,EAAKN,SAAS,CACZL,eAAgB,EAAKF,MAAME,eAAeY,OAAO,CAC/CX,MAAO,YACPC,MAAOS,EAAIE,KACXC,OAAQH,EAAIG,Y,uDA3ClB,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,gBACb,4BAAQC,QAAUC,KAAKb,gBAAvB,mBADF,OAEE,4BAAQY,QAAUC,KAAKX,UAAvB,4BAFF,kDAKA,yBAAKS,UAAU,qBACb,kBAAC,IAAD,CACEG,YAAY,eACZC,OAAQ,CACNC,KAAM,kBACNC,OAAQ,QACRC,MAAO,kDAETC,QAAS,CAAEC,IAAeC,IAAgBC,KAC1CC,IAAMV,KAAKtB,qBACXiC,SAAWX,KAAKnB,MAAMC,iBACtB8B,OAASZ,KAAKnB,MAAME,eACnB8B,UAAYb,KAAKP,wB,GA9BOd,IAAMmC","file":"static/js/42.03ee7eba.chunk.js","sourcesContent":["import React from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\r\n\r\nimport './main.scss'\r\n\r\nexport default class DemoApp extends React.Component {\r\n\r\n  calendarComponentRef = React.createRef()\r\n  state = {\r\n    calendarWeekends: true,\r\n    calendarEvents: [ // initial event data\r\n      { title: 'Event Now', start: new Date() }\r\n    ]\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='demo-app'>\r\n        <div className='demo-app-top'>\r\n          <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\r\n          <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\r\n          (also, click a date/time to add an event)\r\n        </div>\r\n        <div className='demo-app-calendar'>\r\n          <FullCalendar\r\n            defaultView=\"dayGridMonth\"\r\n            header={{\r\n              left: 'prev,next today',\r\n              center: 'title',\r\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n            }}\r\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\r\n            ref={ this.calendarComponentRef }\r\n            weekends={ this.state.calendarWeekends }\r\n            events={ this.state.calendarEvents }\r\n             dateClick={ this.handleDateClick }\r\n            />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  toggleWeekends = () => {\r\n    this.setState({ // update a property\r\n      calendarWeekends: !this.state.calendarWeekends\r\n    })\r\n  }\r\n\r\n  gotoPast = () => {\r\n    let calendarApi = this.calendarComponentRef.current.getApi()\r\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\r\n  }\r\n\r\n  handleDateClick = (arg) => {\r\n    //if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\r\n      this.setState({  // add new event data\r\n        calendarEvents: this.state.calendarEvents.concat({ // creates a new array\r\n          title: 'New Event',\r\n          start: arg.date,\r\n          allDay: arg.allDay\r\n        })\r\n      })\r\n    }\r\n  //}\r\n\r\n}"],"sourceRoot":""}