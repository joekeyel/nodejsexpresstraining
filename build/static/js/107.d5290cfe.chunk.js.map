{"version":3,"sources":["assets/img/brand/telekom.png","assets/img/brand/sygnet.svg","containers/DefaultLayout/DefaultHeader.js"],"names":["module","exports","DefaultHeader","props","state","PendingApproval","PendingTask","openSnackBar","userFullName","this","fetchUpAsync","fetchPendingApproval","username","localStorage","getItem","toUpperCase","fetch","then","response","json","inbox","map","i","TYPE","dataInventory","Object","values","filter","u","setState","dataTask","user","NAME","event","reason","console","log","task","children","length","pendingApproval","Fragment","className","display","mobile","full","src","logo","width","height","alt","minimized","sygnet","navbar","to","pill","color","nav","direction","id","auth","authenticated","name","value","Avatar","getRandomColor","size","round","right","header","tag","action","href","onClick","e","onLogout","style","marginBottom","open","autoHideDuration","onClose","handleClose","bind","anchorOrigin","vertical","horizontal","variant","severity","Component","defaultProps","connect","dispatch","type"],"mappings":"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","file":"static/js/107.d5290cfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telekom.cbf40d33.png\";","module.exports = __webpack_public_path__ + \"static/media/sygnet.dba7f081.svg\";","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Badge,Row, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar'; \r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\r\nimport logo from '../../assets/img/brand/telekom.png'\r\nimport sygnet from '../../assets/img/brand/sygnet.svg'\r\nimport auth from '../../../src/auth';\r\nimport Avatar from 'react-avatar';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      PendingApproval: [],\r\n      PendingTask: [],\r\n      openSnackBar: false,\r\n      userFullName: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n  \r\n    this.props.fetchUpAsync();\r\n    this.props.fetchPendingApproval();\r\n   \r\n    var username = localStorage.getItem('username').toUpperCase();\r\n    var password = localStorage.getItem('password');\r\n    //console.log('login',username1,password);\r\n\r\n   // var username = auth.authenticated.username.toUpperCase();\r\n\r\n    fetch('/api/DC_INBOX_LIST/?userid='+ username)\r\n    .then(response => response.json())\r\n    .then((inbox) => {\r\n        //var approver = Object.values(user.user).filter(u => u.USER_APPROVE === 'Y');\r\n        //console.log('inbox',inbox); \r\n        inbox.map((i)=>{\r\n         \r\n          if(i.TYPE === 'INVENTORY'){\r\n            var dataInventory = Object.values(inbox).filter(u => u.TYPE === 'INVENTORY');\r\n            this.setState({\r\n              PendingApproval: dataInventory,\r\n              openSnackBar: true\r\n            })\r\n          }\r\n          if(i.TYPE === 'TASK'){\r\n            var dataTask = Object.values(inbox).filter(u => u.TYPE === 'TASK');\r\n            this.setState({\r\n              PendingTask: dataTask,\r\n              openSnackBar: true\r\n            })\r\n          }\r\n\r\n        })\r\n       \r\n    })\r\n\r\n    fetch('/api/DC_USER/?userid='+ username)\r\n    .then(response => response.json())\r\n    .then((user) => {\r\n        //console.log('user',user);\r\n        if(user.user){\r\n          user.user.map((u)=>{\r\n            this.setState({\r\n              userFullName: u.NAME\r\n            })\r\n          })\r\n        }\r\n       \r\n    })\r\n\r\n  }\r\n\r\n  handleClose(event, reason){\r\n\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  \r\n    this.setState({\r\n      openSnackBar: false\r\n    })\r\n   \r\n  \r\n  };\r\n  render() {\r\n    //console.log('render',this.state);\r\n    console.log('props',this.props);\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n    const task = this.state.PendingTask ? this.state.PendingTask.length : 0;\r\n    var pendingApproval = this.props.pendingApproval ? this.props.pendingApproval.length : 0;\r\n    return (\r\n      <React.Fragment>\r\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\r\n        <AppNavbarBrand\r\n          full={{ src: logo, width: 75, height: 25, alt: 'CoreUI Logo' }}\r\n          minimized={{ src: sygnet, width: 30, height: 30, alt: 'CoreUI Logo' }}\r\n        />\r\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\r\n\r\n        <Nav className=\"d-md-down-none\" navbar>\r\n          <NavItem className=\"px-3\">\r\n            <NavLink to=\"/main-menu\" className=\"nav-link\" > Main Menu</NavLink>\r\n          </NavItem>\r\n          {/* <NavItem className=\"px-3\">\r\n            <Link to=\"/users\" className=\"nav-link\">Users</Link>\r\n          </NavItem>\r\n          <NavItem className=\"px-3\">\r\n            <NavLink to=\"#\" className=\"nav-link\">Settings</NavLink>\r\n          </NavItem> */}\r\n        </Nav>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem className=\"d-md-down-none\">\r\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-bell\"></i><Badge pill color=\"danger\">{pendingApproval}</Badge></NavLink>\r\n          </NavItem>\r\n          \r\n          {/* <NavItem className=\"d-md-down-none\">\r\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-list\"></i></NavLink>\r\n          </NavItem>\r\n          <NavItem className=\"d-md-down-none\">\r\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-location-pin\"></i></NavLink>\r\n          </NavItem> */}\r\n          <UncontrolledDropdown nav direction=\"down\">\r\n            <DropdownToggle nav>\r\n              <span id={auth.authenticated.username.toUpperCase()} >{this.state.userFullName}</span>\r\n              {/* <img src={'../../assets/img/avatars/telekom.png'} className=\"img-avatar\" /> */}\r\n              <Avatar name={this.state.userFullName} value={this.state.userFullName ? this.state.userFullName : 'TM'} color={Avatar.getRandomColor('sitebase', ['red', 'green', 'blue'])} size=\"40\" round={true} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Account</strong></DropdownItem>\r\n              {/* <DropdownItem><i className=\"fa fa-bell-o\"></i> Updates<Badge color=\"info\">42</Badge></DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-envelope-o\"></i> Messages<Badge color=\"success\">42</Badge></DropdownItem> */}\r\n              <DropdownItem action tag=\"a\" href=\"#/taskList\"><i className=\"fa fa-tasks\"></i> Tasks<Badge color=\"danger\">0</Badge></DropdownItem>\r\n              <DropdownItem action tag=\"a\" href=\"#/pendingApproval\"><i className=\"fa fa-bell-o\"></i>Pending Approval<Badge color=\"warning\"> {pendingApproval}</Badge></DropdownItem>\r\n               {/*<DropdownItem header tag=\"div\" className=\"text-center\"><strong>Settings</strong></DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-user\"></i> Profile</DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-wrench\"></i> Settings</DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-usd\"></i> Payments<Badge color=\"secondary\">42</Badge></DropdownItem>\r\n              <DropdownItem><i className=\"fa fa-file\"></i> Projects<Badge color=\"primary\">42</Badge></DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem><i className=\"fa fa-shield\"></i> Lock Account</DropdownItem> */}\r\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\r\n        {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\r\n        \r\n        <Snackbar style={{marginBottom:'50px'}}\r\n          open={this.state.openSnackBar} autoHideDuration={1500} onClose={this.handleClose.bind(this)} \r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n            <Alert variant=\"filled\"  onClose={this.handleClose.bind(this)}  severity=\"info\" >\r\n                You have {pendingApproval} Pending Approval.\r\n            </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n          open={this.state.openSnackBar} autoHideDuration={1500} onClose={this.handleClose.bind(this)} \r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n            <Alert variant=\"filled\"  onClose={this.handleClose.bind(this)}  severity=\"info\" >\r\n                You have {task} Pending Task.\r\n            </Alert>\r\n      </Snackbar>\r\n      \r\n      </React.Fragment>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nDefaultHeader.propTypes = propTypes;\r\nDefaultHeader.defaultProps = defaultProps;\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    pendingApproval: state.pendingApproval\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n\r\n    fetchUpAsync: () => dispatch({ type: \"FETCH_USER\"}),\r\n    fetchPendingApproval: () => dispatch({ type: \"FETCH_PENDINGAPPROVAL\"}),\r\n  \r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispachToProps)(DefaultHeader);\r\n"],"sourceRoot":""}