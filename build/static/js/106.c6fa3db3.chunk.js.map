{"version":3,"sources":["containers/DefaultLayout/inventory.jpg","containers/DefaultLayout/resource.jpg","containers/DefaultLayout/dashboard.png","containers/DefaultLayout/MainMenu.js"],"names":["module","exports","DefaultHeader","React","lazy","useStyles","makeStyles","root","maxWidth","media","height","MediaCard","props","classes","useState","userID","setUserID","disableInventory","setDisableInventory","disabledResource","setDisabledResource","disabledDashboard","setDisabledDashboard","useEffect","user","localStorage","getItem","toUpperCase","fetch","then","resp","json","rights","map","className","fixed","fallback","onLogout","e","preventDefault","history","push","signOut","xs","hidden","image","ImgInventory","title","gutterBottom","variant","component","color","col","sm","md","xl","block","onClick","auth","MenuSelected","ImgResource","ImgDashboard"],"mappings":"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","file":"static/js/106.c6fa3db3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/inventory.b4e71bed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resource.35bc231e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.d18e2265.png\";","import React, { Suspense, useEffect, useState } from 'react';\r\nimport { Redirect, Link , Switch } from 'react-router-dom';\r\nimport { Row, Col, Button,Container } from 'reactstrap';\r\nimport { makeStyles, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography} from '@material-ui/core';\r\nimport ImgInventory from './inventory.jpg';\r\nimport ImgResource from './resource.jpg';\r\nimport ImgDashboard from './dashboard.png';\r\nimport auth from '../../auth';\r\nimport {\r\n    AppAside,\r\n    AppFooter,\r\n    AppHeader,\r\n    AppSidebar,\r\n    AppSidebarFooter,\r\n    AppSidebarForm,\r\n    AppSidebarHeader,\r\n    AppSidebarMinimizer,\r\n    AppBreadcrumb2 as AppBreadcrumb,\r\n    AppSidebarNav2 as AppSidebarNav,\r\n  } from '@coreui/react';\r\n\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\n\r\n\r\n function MediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n  const [userID, setUserID] = useState(\"\"); \r\n  const [disableInventory, setDisableInventory] = useState(true); \r\n  const [disabledResource, setDisabledResource] = useState(true);\r\n  const [disabledDashboard, setDisabledDashboard] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    var user = localStorage.getItem('username').toUpperCase();\r\n    var password = localStorage.getItem('password');\r\n    \r\n    setUserID(user)\r\n    //console.log('user',user);\r\n    fetch('/api/DC_USER/?userid='+ user)\r\n    .then(resp => resp.json())\r\n    .then((user)=>{\r\n        //console.log('user',user.rights);\r\n        user.rights.map((rights) =>{\r\n            if(rights === \"CAN_VIEW_INVENTORY\"){\r\n                setDisableInventory(false);\r\n            }\r\n            if(rights === \"CAN_VIEW_RESOURCE\"){\r\n                setDisabledResource(false);\r\n            }\r\n            if(rights === \"CAN_VIEW_DASHBOARD\"){\r\n                setDisabledDashboard(false);\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n  },[]);\r\n\r\n  const signOut = (e) => {\r\n    e.preventDefault()\r\n    props.history.push('/login')\r\n  }\r\n\r\n  return (<>\r\n<div className=\"app\">\r\n    <AppHeader fixed>\r\n        <Suspense  fallback={loading()}>\r\n        <DefaultHeader onLogout={e=>signOut(e)}/>\r\n        </Suspense>\r\n    </AppHeader>\r\n <div className=\"app flex-row align-items-center\">\r\n    <Container>\r\n        <Row className=\"justify-content-center\">\r\n            <Col xs='4' hidden={disableInventory}>\r\n            <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                className={classes.media}\r\n                image={ImgInventory}\r\n                title=\"Inventory\"\r\n                />\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Inventory\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    As a DC Operation, I want system to be able to input, manage and track DC inventory element so that DC inventory is up-to-date and the information can be shared across divisions.\r\n                </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                    <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                        <Button \r\n                        block \r\n                        color=\"primary\" \r\n                        className=\"btn-pill\"  \r\n                        //href=\"#/inventoryLayout\" \r\n                        onClick={() => {\r\n                            auth.MenuSelected('inventory',userID,() => {\r\n                            props.history.push(\"/\");\r\n                            });\r\n                        }} \r\n                        >\r\n                        Click Here</Button>\r\n                    </Col>\r\n            </CardActions>\r\n            </Card>\r\n            </Col>\r\n            <Col xs='4' hidden={disabledResource}>\r\n            <Card className={classes.root}>\r\n            <CardActionArea>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={ImgResource}\r\n                title=\"Resource Check\"\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                Resource Check\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    As a Sales/AE/Solution Consultant, I want system to be able to check available DC resource so that quotation to customer can be issued in timely manner.\r\n                </Typography>\r\n            </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n               <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                        <Button \r\n                        block \r\n                        color=\"primary\" \r\n                        className=\"btn-pill\" \r\n                        onClick={() => {\r\n                            auth.MenuSelected('resource check',userID,() => {\r\n                            props.history.push(\"/\");\r\n                            });\r\n                        }} \r\n                        >\r\n                        Click Here</Button>\r\n               </Col>\r\n            </CardActions>\r\n            </Card>\r\n        </Col>\r\n            <Col xs='4' hidden={disabledDashboard}>\r\n            <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                className={classes.media}\r\n                image={ImgDashboard}\r\n                title=\"Dashboard\"\r\n                />\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Dashboard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    As a Product Owner and DC Manager, I want system to be able to show DC resource utilization dashboard so that proper capacity planning can be implemented.\r\n                </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n            <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                        <Button \r\n                        block \r\n                        color=\"primary\" \r\n                        className=\"btn-pill\" \r\n                         onClick={() => {\r\n                            auth.MenuSelected('dashboard',userID,() => {\r\n                            props.history.push(\"/\");\r\n                            });\r\n                        }} \r\n                        > Click Here</Button>\r\n               </Col>\r\n            </CardActions>\r\n            </Card>\r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </div>\r\n        </div>\r\n  </>);\r\n}\r\nexport default MediaCard;"],"sourceRoot":""}